//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Logic.BlockChainApi {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignRequest", Namespace="http://schemas.datacontract.org/2004/07/ServiceImplementation.Model")]
    [System.SerializableAttribute()]
    public partial class SignRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashPrivateKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicianIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HashPrivateKey {
            get {
                return this.HashPrivateKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.HashPrivateKeyField, value) != true)) {
                    this.HashPrivateKeyField = value;
                    this.RaisePropertyChanged("HashPrivateKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicianId {
            get {
                return this.PhysicianIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicianIdField, value) != true)) {
                    this.PhysicianIdField = value;
                    this.RaisePropertyChanged("PhysicianId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientsResponse", Namespace="http://schemas.datacontract.org/2004/07/ServiceImplementation.Model")]
    [System.SerializableAttribute()]
    public partial class PatientsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Logic.BlockChainApi.Patient[] PatientsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Logic.BlockChainApi.Patient[] Patients {
            get {
                return this.PatientsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientsField, value) != true)) {
                    this.PatientsField = value;
                    this.RaisePropertyChanged("Patients");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/ServiceImplementation.Model")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BsnNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLastMutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HousenumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Logic.BlockChainApi.ContentItems[] ItemsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BsnNumber {
            get {
                return this.BsnNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BsnNumberField, value) != true)) {
                    this.BsnNumberField = value;
                    this.RaisePropertyChanged("BsnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLastMutation {
            get {
                return this.DateLastMutationField;
            }
            set {
                if ((this.DateLastMutationField.Equals(value) != true)) {
                    this.DateLastMutationField = value;
                    this.RaisePropertyChanged("DateLastMutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Housenumber {
            get {
                return this.HousenumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HousenumberField, value) != true)) {
                    this.HousenumberField = value;
                    this.RaisePropertyChanged("Housenumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Logic.BlockChainApi.ContentItems[] ItemsList {
            get {
                return this.ItemsListField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsListField, value) != true)) {
                    this.ItemsListField = value;
                    this.RaisePropertyChanged("ItemsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Streetname {
            get {
                return this.StreetnameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetnameField, value) != true)) {
                    this.StreetnameField = value;
                    this.RaisePropertyChanged("Streetname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContentItems", Namespace="http://schemas.datacontract.org/2004/07/ServiceImplementation.Model")]
    [System.SerializableAttribute()]
    public partial class ContentItems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataBlockCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeMutationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentId {
            get {
                return this.ContentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentIdField, value) != true)) {
                    this.ContentIdField = value;
                    this.RaisePropertyChanged("ContentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataBlockCount {
            get {
                return this.DataBlockCountField;
            }
            set {
                if ((this.DataBlockCountField.Equals(value) != true)) {
                    this.DataBlockCountField = value;
                    this.RaisePropertyChanged("DataBlockCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeMutation {
            get {
                return this.DateTimeMutationField;
            }
            set {
                if ((this.DateTimeMutationField.Equals(value) != true)) {
                    this.DateTimeMutationField = value;
                    this.RaisePropertyChanged("DateTimeMutation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinkingPhysicianRequest", Namespace="http://schemas.datacontract.org/2004/07/ServiceImplementation.Model")]
    [System.SerializableAttribute()]
    public partial class LinkingPhysicianRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BsnNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BsnNumber {
            get {
                return this.BsnNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BsnNumberField, value) != true)) {
                    this.BsnNumberField = value;
                    this.RaisePropertyChanged("BsnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignMessage {
            get {
                return this.SignMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SignMessageField, value) != true)) {
                    this.SignMessageField = value;
                    this.RaisePropertyChanged("SignMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataItem", Namespace="http://schemas.datacontract.org/2004/07/ServiceImplementation.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Logic.BlockChainApi.DataItemToStore))]
    public partial class DataItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreamNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentId {
            get {
                return this.ContentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentIdField, value) != true)) {
                    this.ContentIdField = value;
                    this.RaisePropertyChanged("ContentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreamName {
            get {
                return this.StreamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreamNameField, value) != true)) {
                    this.StreamNameField = value;
                    this.RaisePropertyChanged("StreamName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataItemToStore", Namespace="http://schemas.datacontract.org/2004/07/ServiceImplementation.Model")]
    [System.SerializableAttribute()]
    public partial class DataItemToStore : Logic.BlockChainApi.DataItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataToStoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataToStore {
            get {
                return this.DataToStoreField;
            }
            set {
                if ((object.ReferenceEquals(this.DataToStoreField, value) != true)) {
                    this.DataToStoreField = value;
                    this.RaisePropertyChanged("DataToStore");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContentData", Namespace="http://schemas.datacontract.org/2004/07/ServiceImplementation.Model")]
    [System.SerializableAttribute()]
    public partial class ContentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Logic.BlockChainApi.Transaction[] ContentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Logic.BlockChainApi.Transaction[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/ServiceImplementation.Model")]
    [System.SerializableAttribute()]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIdField, value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockChainApi.IBlockChainApi")]
    public interface IBlockChainApi {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/SignPhysician", ReplyAction="http://tempuri.org/IBlockChainApi/SignPhysicianResponse")]
        string SignPhysician(Logic.BlockChainApi.SignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/SignPhysician", ReplyAction="http://tempuri.org/IBlockChainApi/SignPhysicianResponse")]
        System.Threading.Tasks.Task<string> SignPhysicianAsync(Logic.BlockChainApi.SignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/GetAllPatients", ReplyAction="http://tempuri.org/IBlockChainApi/GetAllPatientsResponse")]
        Logic.BlockChainApi.PatientsResponse GetAllPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/GetAllPatients", ReplyAction="http://tempuri.org/IBlockChainApi/GetAllPatientsResponse")]
        System.Threading.Tasks.Task<Logic.BlockChainApi.PatientsResponse> GetAllPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/LinkPhysicianToPatient", ReplyAction="http://tempuri.org/IBlockChainApi/LinkPhysicianToPatientResponse")]
        string LinkPhysicianToPatient(Logic.BlockChainApi.LinkingPhysicianRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/LinkPhysicianToPatient", ReplyAction="http://tempuri.org/IBlockChainApi/LinkPhysicianToPatientResponse")]
        System.Threading.Tasks.Task<string> LinkPhysicianToPatientAsync(Logic.BlockChainApi.LinkingPhysicianRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/GetContentData", ReplyAction="http://tempuri.org/IBlockChainApi/GetContentDataResponse")]
        Logic.BlockChainApi.ContentData GetContentData(Logic.BlockChainApi.DataItem request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/GetContentData", ReplyAction="http://tempuri.org/IBlockChainApi/GetContentDataResponse")]
        System.Threading.Tasks.Task<Logic.BlockChainApi.ContentData> GetContentDataAsync(Logic.BlockChainApi.DataItem request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/SetContentData", ReplyAction="http://tempuri.org/IBlockChainApi/SetContentDataResponse")]
        string SetContentData(Logic.BlockChainApi.DataItemToStore request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlockChainApi/SetContentData", ReplyAction="http://tempuri.org/IBlockChainApi/SetContentDataResponse")]
        System.Threading.Tasks.Task<string> SetContentDataAsync(Logic.BlockChainApi.DataItemToStore request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlockChainApiChannel : Logic.BlockChainApi.IBlockChainApi, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlockChainApiClient : System.ServiceModel.ClientBase<Logic.BlockChainApi.IBlockChainApi>, Logic.BlockChainApi.IBlockChainApi {
        
        public BlockChainApiClient() {
        }
        
        public BlockChainApiClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlockChainApiClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlockChainApiClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlockChainApiClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SignPhysician(Logic.BlockChainApi.SignRequest request) {
            return base.Channel.SignPhysician(request);
        }
        
        public System.Threading.Tasks.Task<string> SignPhysicianAsync(Logic.BlockChainApi.SignRequest request) {
            return base.Channel.SignPhysicianAsync(request);
        }
        
        public Logic.BlockChainApi.PatientsResponse GetAllPatients() {
            return base.Channel.GetAllPatients();
        }
        
        public System.Threading.Tasks.Task<Logic.BlockChainApi.PatientsResponse> GetAllPatientsAsync() {
            return base.Channel.GetAllPatientsAsync();
        }
        
        public string LinkPhysicianToPatient(Logic.BlockChainApi.LinkingPhysicianRequest request) {
            return base.Channel.LinkPhysicianToPatient(request);
        }
        
        public System.Threading.Tasks.Task<string> LinkPhysicianToPatientAsync(Logic.BlockChainApi.LinkingPhysicianRequest request) {
            return base.Channel.LinkPhysicianToPatientAsync(request);
        }
        
        public Logic.BlockChainApi.ContentData GetContentData(Logic.BlockChainApi.DataItem request) {
            return base.Channel.GetContentData(request);
        }
        
        public System.Threading.Tasks.Task<Logic.BlockChainApi.ContentData> GetContentDataAsync(Logic.BlockChainApi.DataItem request) {
            return base.Channel.GetContentDataAsync(request);
        }
        
        public string SetContentData(Logic.BlockChainApi.DataItemToStore request) {
            return base.Channel.SetContentData(request);
        }
        
        public System.Threading.Tasks.Task<string> SetContentDataAsync(Logic.BlockChainApi.DataItemToStore request) {
            return base.Channel.SetContentDataAsync(request);
        }
    }
}
